import{_ as n,c as s,o as a,d as p}from"./app.9fda2e54.js";var t="/assets/on().fcde08be.png",o="/assets/Snipaste_2022-03-30_23-40-15.7857eb5c.png",c="/assets/Mergesort.d820fe15.gif",e="/assets/Snipaste_2022-03-31_03-18-07.d0a671e4.png",u="/assets/Snipaste_2022-03-31_03-21-45.58b81020.png",l="/assets/Snipaste_2022-03-31_03-29-56.340e582b.png",k="/assets/Snipaste_2022-03-31_03-32-30.e123dc50.png";const v='{"title":"\u7B97\u6CD5","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u7B97\u6CD5","slug":"\u7B97\u6CD5"},{"level":3,"title":"\u4E8C\u5206\u6CD5","slug":"\u4E8C\u5206\u6CD5"},{"level":3,"title":"\u5FEB\u901F\u6392\u5E8F","slug":"\u5FEB\u901F\u6392\u5E8F"},{"level":3,"title":"\u5FEB\u901F\u6392\u5E8F\u76843\u4E2A\u57FA\u672C\u6B65\u9AA4\uFF1A","slug":"\u5FEB\u901F\u6392\u5E8F\u76843\u4E2A\u57FA\u672C\u6B65\u9AA4\uFF1A"},{"level":3,"title":"\u5F52\u5E76\u6392\u5E8F","slug":"\u5F52\u5E76\u6392\u5E8F"},{"level":3,"title":"\u57FA\u6570\u6392\u5E8F","slug":"\u57FA\u6570\u6392\u5E8F"},{"level":3,"title":"\u9009\u62E9\u6392\u5E8F","slug":"\u9009\u62E9\u6392\u5E8F"},{"level":3,"title":"\u8BA1\u6570\u6392\u5E8F","slug":"\u8BA1\u6570\u6392\u5E8F"}],"relativePath":"pages/js/algorithm.md"}',i={},r=p('<h2 id="\u7B97\u6CD5" tabindex="-1">\u7B97\u6CD5 <a class="header-anchor" href="#\u7B97\u6CD5" aria-hidden="true">#</a></h2><p><img src="'+t+'" alt=""></p><h3 id="\u4E8C\u5206\u6CD5" tabindex="-1">\u4E8C\u5206\u6CD5 <a class="header-anchor" href="#\u4E8C\u5206\u6CD5" aria-hidden="true">#</a></h3><p>\u5F85\u300B\u3009\u300B\u3009\u300B</p><h3 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1">\u5FEB\u901F\u6392\u5E8F <a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a></h3><p>\u5FEB\u901F\u6392\u5E8F\uFF08\u82F1\u8BED\uFF1AQuicksort\uFF09\uFF0C\u53C8\u79F0\u5212\u5206\u4EA4\u6362\u6392\u5E8F\uFF08partition-exchange sort\uFF09\uFF0C\u7B80\u79F0\u5FEB\u6392\uFF0C\u4E00\u79CD\u6392\u5E8F\u7B97\u6CD5\uFF0C\u6700\u65E9\u7531\u4E1C\u5C3C\xB7\u970D\u5C14\u63D0\u51FA\u3002\u5728\u5E73\u5747\u72B6\u51B5\u4E0B\uFF0C\u6392\u5E8Fn\u4E2A\u9879\u76EE\u8981O(nLogn)\u6B21\u6BD4\u8F83\u3002\u5728\u6700\u574F\u72B6\u51B5\u4E0B\u5219\u9700\u8981O(n^2)\u6B21\u6BD4\u8F83\uFF0C\u4F46\u8FD9\u79CD\u72B6\u51B5\u5E76\u4E0D\u5E38\u89C1\u3002\u4E8B\u5B9E\u4E0A\uFF0C\u5FEB\u901F\u6392\u5E8FO(nLogn)\u901A\u5E38\u660E\u663E\u6BD4\u5176\u4ED6\u7B97\u6CD5\u66F4\u5FEB\uFF0C\u56E0\u4E3A\u5B83\u7684\u5185\u90E8\u5FAA\u73AF\uFF08inner loop\uFF09\u53EF\u4EE5\u5728\u5927\u90E8\u5206\u7684\u67B6\u6784\u4E0A\u5F88\u6709\u6548\u7387\u5730\u8FBE\u6210\u3002</p><h3 id="\u5FEB\u901F\u6392\u5E8F\u76843\u4E2A\u57FA\u672C\u6B65\u9AA4\uFF1A" tabindex="-1">\u5FEB\u901F\u6392\u5E8F\u76843\u4E2A\u57FA\u672C\u6B65\u9AA4\uFF1A <a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F\u76843\u4E2A\u57FA\u672C\u6B65\u9AA4\uFF1A" aria-hidden="true">#</a></h3><ol><li><p>\u4ECE\u6570\u7EC4\u4E2D\u9009\u62E9\u4E00\u4E2A\u5143\u7D20\u4F5C\u4E3A\u57FA\u51C6\u70B9</p></li><li><p>\u6392\u5E8F\u6570\u7EC4\uFF0C\u6240\u6709\u6BD4\u57FA\u51C6\u503C\u5C0F\u7684\u5143\u7D20\u6446\u653E\u5728\u5DE6\u8FB9\uFF0C\u800C\u5927\u4E8E\u57FA\u51C6\u503C\u7684\u6446\u653E\u5728\u53F3\u8FB9\u3002\u6BCF\u6B21\u5206\u5272\u7ED3\u675F\u4EE5\u540E\u57FA\u51C6\u503C\u4F1A\u63D2\u5165\u5230\u4E2D\u95F4\u53BB\u3002</p></li><li><p>\u6700\u540E\u5229\u7528\u9012\u5F52\uFF0C\u5C06\u6446\u653E\u5728\u5DE6\u8FB9\u7684\u6570\u7EC4\u548C\u53F3\u8FB9\u7684\u6570\u7EC4\u5728\u8FDB\u884C\u4E00\u6B21\u4E0A\u8FF0\u76841\u548C2\u64CD\u4F5C\u3002</p><p><img src="'+o+`" alt=""></p></li></ol><p>\u6211\u4EEC\u6839\u636E\u4E0A\u9762\u8FD9\u5F20\u56FE\uFF0C\u6765\u7528\u6587\u5B57\u63CF\u8FF0\u4E00\u4E0B</p><ol><li>\u9009\u62E9\u5DE6\u53F3\u8FB9\u6216\u4EFB\u610F\u7684\u5143\u7D20\u4E3A\u57FA\u51C6\u6570\uFF0C7</li><li>\u5C06\u5C0F\u4E8E7\u7684\u653E\u5728\u5DE6\u8FB9\uFF0C\u5927\u4E8E7\u7684\u653E\u5728\u53F3\u8FB9\uFF0C\u7136\u540E\u5C06\u57FA\u51C6\u6570\u653E\u5230\u4E2D\u95F4</li><li>\u7136\u540E\u518D\u91CD\u590D\u64CD\u4F5C\u4ECE\u5DE6\u8FB9\u7684\u6570\u7EC4\u9009\u62E9\u4E00\u4E2A\u57FA\u51C6\u70B92</li><li>3\u6BD42\u5927\u5219\u653E\u5230\u57FA\u51C6\u6811\u7684\u53F3\u8FB9</li><li>\u53F3\u8FB9\u7684\u6570\u7EC4\u4E5F\u662F\u4E00\u6837\u9009\u62E912\u4F5C\u4E3A\u57FA\u51C6\u6570\uFF0C15\u6BD412\u5927\u6240\u4EE5\u653E\u5230\u4E8612\u7684\u53F3\u8FB9</li><li>\u6700\u540E\u51FA\u6765\u7684\u7ED3\u679C\u5C31\u662F\u4ECE\u5DE6\u5230\u53F3 2 \uFF0C3\uFF0C7\uFF0C12\uFF0C15\u4E86</li></ol><p>\u4EE5\u4E0A\u5C31\u662F\u4E00\u4E2A\u5927\u6982\u601D\u8DEF\u3002</p><ol><li><p>\u5B9E\u73B0\u65B9\u5F0F\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">var</span> <span class="token function-variable function">quickSort</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> pivotIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> pivot <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>pivotIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> left <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> right <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> pivot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>pivot<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div></li></ol><h3 id="\u5F52\u5E76\u6392\u5E8F" tabindex="-1">\u5F52\u5E76\u6392\u5E8F <a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a></h3><p>\u5F52\u5E76\u6392\u5E8F\uFF08MERGE-SORT\uFF09\u662F\u5EFA\u7ACB\u5728\u5F52\u5E76\u64CD\u4F5C\u4E0A\u7684\u4E00\u79CD\u6709\u6548\u7684\u6392\u5E8F\u7B97\u6CD5,\u8BE5\u7B97\u6CD5\u662F\u91C7\u7528\u5206\u6CBB\u6CD5\uFF08Divide andConquer\uFF09\u7684\u4E00\u4E2A\u975E\u5E38\u5178\u578B\u7684\u5E94\u7528\u3002\u5C06\u5DF2\u6709\u5E8F\u7684\u5B50\u5E8F\u5217\u5408\u5E76\uFF0C\u5F97\u5230\u5B8C\u5168\u6709\u5E8F\u7684\u5E8F\u5217\uFF1B\u5373\u5148\u4F7F\u6BCF\u4E2A\u5B50\u5E8F\u5217\u6709\u5E8F\uFF0C\u518D\u4F7F\u5B50\u5E8F\u5217\u6BB5\u95F4\u6709\u5E8F\u3002\u82E5\u5C06\u4E24\u4E2A\u6709\u5E8F\u8868\u5408\u5E76\u6210\u4E00\u4E2A\u6709\u5E8F\u8868\uFF0C\u79F0\u4E3A\u4E8C\u8DEF\u5F52\u5E76\u3002</p><p>\u5F52\u5E76\u6392\u5E8F\u662F\u4E00\u79CD\u975E\u5E38\u7A33\u5B9A\u7684\u6392\u5E8F\u65B9\u6CD5\uFF0C\u5B83\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u65E0\u8BBA\u662F\u5E73\u5747\uFF0C\u6700\u597D\uFF0C\u6700\u574F\u90FD\u662FNlogN\u3002</p><h5 id="\u5F52\u5E76\u6392\u5E8F\u76842\u4E2A\u6B65\u9AA4" tabindex="-1">\u5F52\u5E76\u6392\u5E8F\u76842\u4E2A\u6B65\u9AA4 <a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F\u76842\u4E2A\u6B65\u9AA4" aria-hidden="true">#</a></h5><ol><li><p>\u5148\u62C6\u5206\uFF0C\u4E00\u76F4\u62C6\u5206\u5230\u53EA\u6709\u4E00\u4E2A\u6570</p></li><li><p>\u62C6\u5206\u5B8C\u6210\u540E\uFF0C\u5F00\u59CB\u9012\u5F52\u5408\u5E76</p><p><img src="`+c+`" alt=""></p><p>\u4ECE\u52A8\u56FE\u53EF\u4EE5\u770B\u51FA\uFF0C\u5F52\u5E76\u6392\u5E8F\u4F1A\u5C06\u4E00\u4E2A\u6570\u7EC4\u8FDB\u884C\u4E24\u4E24\u62C6\u5206\uFF0C\u4E00\u76F4\u62C6\u5206\u5230\u53EA\u6709\u4E00\u4E2A\u6570\u7684\u65F6\u5019\u505C\u6B62\u62C6\u5206\u3002</p><p>\u5408\u5E76\u7684\u8FC7\u7A0B\u5C31\u5982\u52A8\u56FE\u6240\u793A</p><ol><li>\u904D\u5386\u4E24\u7EC4\u6570\u636E</li><li>\u8FDB\u884C\u5BF9\u6BD4\u5927\u5C0F</li><li>\u8F83\u5C0F\u7684\u90A3\u4E2A\u503C\u53D6\u51FA\u6765\u653E\u5728\u7B2C\u4E00\u4E2A\u4F4D\u7F6E</li></ol><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr
  <span class="token keyword">let</span> mid<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token function">merge</span><span class="token punctuation">(</span>
    <span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>mid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span>right</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> res<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> right<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>left<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>right<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>right<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>res<span class="token punctuation">,</span><span class="token operator">...</span>left<span class="token punctuation">,</span><span class="token operator">...</span>right<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u57FA\u6570\u6392\u5E8F" tabindex="-1">\u57FA\u6570\u6392\u5E8F <a class="header-anchor" href="#\u57FA\u6570\u6392\u5E8F" aria-hidden="true">#</a></h3><p>\u57FA\u6570\u6392\u5E8F\u4F1A\u5BF9\u6570\u636E\u5206\u522B\u8FDB\u884C\u6309\u4F4D\u6392\u5E8F</p><p>\u5BF9\u4E8E\u793A\u4F8B\u6570\u636E\u4F1A\uFF1A[12,21,11,32,31,22,21]</p><ol><li><p>\u9996\u5148\u6309\u4E2A\u4F4D\u6570\u5B57\u5927\u5C0F\u6392\u5E8F</p><p>\u8BB0\u5F55\u6BCF\u4E2A\u4E2A\u4F4D\u4E0A\u7684\u6570\u5B57\u51FA\u73B0\u7684\u6B21\u6570</p><ul><li>1 \u51FA\u73B0 4\u6B21</li><li>2 \u51FA\u73B02\u6B21</li><li>3 \u51FA\u73B01\u6B21</li></ul><p>\u5BF9\u6B21\u6570\u6C42\u524D\u7F00\u548C\u5F97\u5230\u7ED3\u679C4\uFF0C6\uFF0C7 \u3002\u6C42\u524D\u7F00\u548C\u662F\u4E3A\u4E86\u5F97\u5230\u5F52\u4F4D\u6570\u5B57\u7684\u533A\u95F4</p><ul><li><p>\u4E2A\u4F4D\u4E3A1\u7684\u6570\u5B57\u653E\u52300\uFF5E3</p></li><li><p>\u4E2A\u4F4D\u4E3A2\u7684\u6570\u5B57\u653E\u52304\uFF5E5</p></li><li><p>\u4E2A\u4F4D\u4E3A3\u7684\u6570\u5B57\u653E\u52306</p><p><img src="`+e+'" alt=""></p><p>\u7136\u540E\u4ECE\u540E\u5411\u524D\u904D\u5386\u6570\u7EC4\uFF0C\u6839\u636E\u5F97\u5230\u7684\u533A\u95F4\u5C06\u6570\u5B57\u4ECE\u540E\u5411\u524D\u7684\u653E\u7F6E\u5230\u5BF9\u5E94\u7684\u533A\u95F4\u5185</p><p><img src="'+u+'" alt=""></p></li></ul></li><li><p>\u7136\u540E\u6839\u636E\u4E2A\u4F4D\u6392\u5E8F\u7684\u7ED3\u679C\u6309\u5341\u4F4D\u6570\u5B57\u5927\u5C0F\u6392\u5E8F</p><p>\u8BB0\u5F55\u6BCF\u4E2A\u5341\u4F4D\u4E0A\u7684\u6570\u5B57\u51FA\u73B0\u7684\u6B21\u6570</p><ul><li>1 \u51FA\u73B0 2\u6B21</li><li>2 \u51FA\u73B0 3\u6B21</li><li>3 \u51FA\u73B0 2\u6B21</li></ul><p>\u5BF9\u6B21\u6570\u6C42\u524D\u7F00\u548C\u5F97\u5230\u7ED3\u679C2\uFF0C5\uFF0C7 \u3002</p><ul><li>\u5341\u4F4D\u4E3A1\u7684\u6570\u5B57\u653E\u52300\uFF5E1</li><li>\u5341\u4F4D\u4E3A2\u7684\u6570\u5B57\u653E\u52302\uFF5E4</li><li>\u5341\u4F4D\u4E3A3\u7684\u6570\u5B57\u653E\u52305\uFF5E6</li></ul><p><img src="'+l+'" alt=""></p><p>\u7136\u540E\u4ECE\u540E\u5411\u524D\u904D\u5386\u6570\u7EC4\uFF0C\u6839\u636E\u5F97\u5230\u7684\u533A\u95F4\u5C06\u6570\u5B57\u4ECE\u540E\u5411\u524D\u7684\u653E\u7F6E\u5230\u5BF9\u5E94\u7684\u533A\u95F4\u5185</p><p><img src="'+k+`" alt=""></p><p>\u4EE3\u7801\uFF1A</p><div class="language-js"><pre><code><span class="token comment">// \u83B7\u53D6\u4F4E 16 \u4F4D</span>
<span class="token keyword">function</span> <span class="token function">low16</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> num <span class="token operator">&amp;</span> <span class="token number">0xffff</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u83B7\u53D6\u9AD8 16 \u4F4D</span>
<span class="token keyword">function</span> <span class="token function">__high16</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>num <span class="token operator">&amp;</span> <span class="token number">0xffff0000</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">16</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">high16</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> h <span class="token operator">=</span> <span class="token function">__high16</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
  <span class="token keyword">return</span> h <span class="token operator">&gt;</span> <span class="token number">32767</span> <span class="token operator">?</span> h <span class="token operator">-</span> <span class="token number">32768</span> <span class="token operator">:</span> h <span class="token operator">+</span> <span class="token number">32768</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">radixSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u8BA1\u6570\u6570\u7EC4</span>
  <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">65536</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// \u83B7\u53D6\u8F93\u5165\u6570\u7EC4\u957F\u5EA6</span>
    len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
    <span class="token comment">// \u521B\u5EFA temp \u6570\u7EC4\u5B58\u50A8\u4F4E 16 \u4F4D\u6392\u5E8F\u540E\u7684\u7ED3\u679C</span>
    temp <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span>
  <span class="token comment">// \u5BF9\u4F4E 16 \u4F4D\u8FDB\u884C\u6392\u5E8F</span>
  <span class="token comment">// \u8BA1\u6570</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> count<span class="token punctuation">[</span><span class="token function">low16</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">++</span>
  <span class="token comment">// \u524D\u7F00\u548C</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">65536</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> count<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> count<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5F52\u4F4D</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> temp<span class="token punctuation">[</span><span class="token operator">--</span>count<span class="token punctuation">[</span><span class="token function">low16</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
  <span class="token comment">// \u91CD\u7F6E count \u6570\u7EC4</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">65536</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> count<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token comment">// \u5BF9\u9AD8 16 \u4F4D\u8FDB\u884C\u6392\u5E8F</span>
  <span class="token comment">// \u8BA1\u6570</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> count<span class="token punctuation">[</span><span class="token function">high16</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">++</span>
  <span class="token comment">// \u524D\u7F00\u548C</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">65536</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> count<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> count<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5F52\u4F4D</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> arr<span class="token punctuation">[</span><span class="token operator">--</span>count<span class="token punctuation">[</span><span class="token function">high16</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
  <span class="token comment">// \u8FD4\u56DE\u7ED3\u679C</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

</code></pre></div></li></ol></li></ol><h3 id="\u9009\u62E9\u6392\u5E8F" tabindex="-1">\u9009\u62E9\u6392\u5E8F <a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a></h3><ol><li>\u7B2C\u4E00\u79CD</li></ol><div class="language-js"><pre><code><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">selectSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> ret<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">function</span> <span class="token function">findInd</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//findIdn\u8FD4\u56DE\u539F\u6570\u7EC4\u4E2D\u6700\u5C0F\u7684\u503C\u7684\u4E0B\u6807</span>
    <span class="token keyword">let</span> ind<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span>arr<span class="token punctuation">[</span>ind<span class="token punctuation">]</span><span class="token punctuation">)</span> ind<span class="token operator">=</span>i
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ind
  <span class="token punctuation">}</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
    ret<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token function">findInd</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  
 <span class="token keyword">return</span> ret
<span class="token punctuation">}</span>
</code></pre></div><p>\u7F3A\u70B9\u662F\u7A7A\u95F4\u590D\u6742\u5EA6\u8F83\u9AD8</p><ol start="2"><li><p>\u7B2C\u4E8C\u79CD</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">selectSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> len<span class="token operator">=</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> idx<span class="token operator">=</span>i<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&lt;</span>arr<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span> idx <span class="token operator">=</span>j
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>idx<span class="token operator">!==</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">const</span> temp<span class="token operator">=</span>arr<span class="token punctuation">[</span>idx<span class="token punctuation">]</span>
      arr<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token operator">=</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>temp
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
 <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre></div></li></ol><h3 id="\u8BA1\u6570\u6392\u5E8F" tabindex="-1">\u8BA1\u6570\u6392\u5E8F <a class="header-anchor" href="#\u8BA1\u6570\u6392\u5E8F" aria-hidden="true">#</a></h3><ol><li><p>\u5904\u7406\u975E\u8D1F\u6570</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">countSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  countArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>countArr<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> countArr<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
    countArr<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">++</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>countArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>countArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
      countArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">--</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>\u53EF\u4EE5\u5904\u7406\u8D1F\u6570</p><div class="language-js"><pre><code><span class="token keyword">const</span> origin<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">countSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> min<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//\u53D6\u6700\u5C0F\u503C \u6BD4\u5982origin\u6700\u5C0F\u503C\u662F-6</span>
  countArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//arr[i]\u662F6 - \u8D1F6\u5C31\u662F12 \u628A6\u653E\u523012\u7684\u4F4D\u7F6E\uFF0C\u5982\u679Carr[i]\u662F \u8D1F6 \u8D1F6-\u8D1F6\u5C31\u662F0\uFF0C\u628A-6\u653E\u52300\u7684\u4F4D\u7F6E</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>countArr<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>min<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> countArr<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>min<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
    countArr<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>min<span class="token punctuation">]</span><span class="token operator">++</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>countArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>countArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token operator">+</span>min<span class="token punctuation">)</span> <span class="token comment">//\u56E0\u4E3A\u4E0A\u9762\u51CF\u4E86min\uFF0Cpush\u8981\u52A0\u56DE\u6765</span>
      countArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">--</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ol>`,24),d=[r];function m(f,h,w,y,b,g){return a(),s("div",null,d)}var x=n(i,[["render",m]]);export{v as __pageData,x as default};
